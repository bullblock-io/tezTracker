// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetContractsListHandlerFunc turns a function with the right signature into a get contracts list handler
type GetContractsListHandlerFunc func(GetContractsListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetContractsListHandlerFunc) Handle(params GetContractsListParams) middleware.Responder {
	return fn(params)
}

// GetContractsListHandler interface for that can handle valid get contracts list params
type GetContractsListHandler interface {
	Handle(GetContractsListParams) middleware.Responder
}

// NewGetContractsList creates a new http.Handler for the get contracts list operation
func NewGetContractsList(ctx *middleware.Context, handler GetContractsListHandler) *GetContractsList {
	return &GetContractsList{Context: ctx, Handler: handler}
}

/*GetContractsList swagger:route GET /v2/data/{platform}/{network}/contracts Accounts getContractsList

GetContractsList get contracts list API

*/
type GetContractsList struct {
	Context *middleware.Context
	Handler GetContractsListHandler
}

func (o *GetContractsList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetContractsListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
