// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetAccountDelegatorsHandlerFunc turns a function with the right signature into a get account delegators handler
type GetAccountDelegatorsHandlerFunc func(GetAccountDelegatorsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAccountDelegatorsHandlerFunc) Handle(params GetAccountDelegatorsParams) middleware.Responder {
	return fn(params)
}

// GetAccountDelegatorsHandler interface for that can handle valid get account delegators params
type GetAccountDelegatorsHandler interface {
	Handle(GetAccountDelegatorsParams) middleware.Responder
}

// NewGetAccountDelegators creates a new http.Handler for the get account delegators operation
func NewGetAccountDelegators(ctx *middleware.Context, handler GetAccountDelegatorsHandler) *GetAccountDelegators {
	return &GetAccountDelegators{Context: ctx, Handler: handler}
}

/*GetAccountDelegators swagger:route GET /v2/data/{platform}/{network}/accounts/{accountId}/delegators Accounts getAccountDelegators

GetAccountDelegators get account delegators API

*/
type GetAccountDelegators struct {
	Context *middleware.Context
	Handler GetAccountDelegatorsHandler
}

func (o *GetAccountDelegators) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAccountDelegatorsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
