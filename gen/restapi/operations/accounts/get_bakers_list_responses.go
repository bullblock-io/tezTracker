// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	models "github.com/bullblock-io/tezTracker/gen/models"
)

// GetBakersListOKCode is the HTTP code returned for type GetBakersListOK
const GetBakersListOKCode int = 200

/*GetBakersListOK Query Endpoint for getting list of baker accounts ordered by staking balance.

swagger:response getBakersListOK
*/
type GetBakersListOK struct {
	/*The total number of data entries.

	 */
	XTotalCount int64 `json:"X-Total-Count"`

	/*
	  In: Body
	*/
	Payload []*models.BakersRow `json:"body,omitempty"`
}

// NewGetBakersListOK creates GetBakersListOK with default headers values
func NewGetBakersListOK() *GetBakersListOK {

	return &GetBakersListOK{}
}

// WithXTotalCount adds the xTotalCount to the get bakers list o k response
func (o *GetBakersListOK) WithXTotalCount(xTotalCount int64) *GetBakersListOK {
	o.XTotalCount = xTotalCount
	return o
}

// SetXTotalCount sets the xTotalCount to the get bakers list o k response
func (o *GetBakersListOK) SetXTotalCount(xTotalCount int64) {
	o.XTotalCount = xTotalCount
}

// WithPayload adds the payload to the get bakers list o k response
func (o *GetBakersListOK) WithPayload(payload []*models.BakersRow) *GetBakersListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get bakers list o k response
func (o *GetBakersListOK) SetPayload(payload []*models.BakersRow) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBakersListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Total-Count

	xTotalCount := swag.FormatInt64(o.XTotalCount)
	if xTotalCount != "" {
		rw.Header().Set("X-Total-Count", xTotalCount)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.BakersRow, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetBakersListBadRequestCode is the HTTP code returned for type GetBakersListBadRequest
const GetBakersListBadRequestCode int = 400

/*GetBakersListBadRequest Bad request

swagger:response getBakersListBadRequest
*/
type GetBakersListBadRequest struct {
}

// NewGetBakersListBadRequest creates GetBakersListBadRequest with default headers values
func NewGetBakersListBadRequest() *GetBakersListBadRequest {

	return &GetBakersListBadRequest{}
}

// WriteResponse to the client
func (o *GetBakersListBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// GetBakersListNotFoundCode is the HTTP code returned for type GetBakersListNotFound
const GetBakersListNotFoundCode int = 404

/*GetBakersListNotFound Not Found

swagger:response getBakersListNotFound
*/
type GetBakersListNotFound struct {
}

// NewGetBakersListNotFound creates GetBakersListNotFound with default headers values
func NewGetBakersListNotFound() *GetBakersListNotFound {

	return &GetBakersListNotFound{}
}

// WriteResponse to the client
func (o *GetBakersListNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
