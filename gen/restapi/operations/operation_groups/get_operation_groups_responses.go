// Code generated by go-swagger; DO NOT EDIT.

package operation_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetOperationGroupsOKCode is the HTTP code returned for type GetOperationGroupsOK
const GetOperationGroupsOKCode int = 200

/*GetOperationGroupsOK Query compatibility endpoint for operation groups

swagger:response getOperationGroupsOK
*/
type GetOperationGroupsOK struct {

	/*
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewGetOperationGroupsOK creates GetOperationGroupsOK with default headers values
func NewGetOperationGroupsOK() *GetOperationGroupsOK {

	return &GetOperationGroupsOK{}
}

// WithPayload adds the payload to the get operation groups o k response
func (o *GetOperationGroupsOK) WithPayload(payload []string) *GetOperationGroupsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get operation groups o k response
func (o *GetOperationGroupsOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOperationGroupsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetOperationGroupsNotFoundCode is the HTTP code returned for type GetOperationGroupsNotFound
const GetOperationGroupsNotFoundCode int = 404

/*GetOperationGroupsNotFound Not Found

swagger:response getOperationGroupsNotFound
*/
type GetOperationGroupsNotFound struct {
}

// NewGetOperationGroupsNotFound creates GetOperationGroupsNotFound with default headers values
func NewGetOperationGroupsNotFound() *GetOperationGroupsNotFound {

	return &GetOperationGroupsNotFound{}
}

// WriteResponse to the client
func (o *GetOperationGroupsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
