// Code generated by go-swagger; DO NOT EDIT.

package fees

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetAvgFeesHandlerFunc turns a function with the right signature into a get avg fees handler
type GetAvgFeesHandlerFunc func(GetAvgFeesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAvgFeesHandlerFunc) Handle(params GetAvgFeesParams) middleware.Responder {
	return fn(params)
}

// GetAvgFeesHandler interface for that can handle valid get avg fees params
type GetAvgFeesHandler interface {
	Handle(GetAvgFeesParams) middleware.Responder
}

// NewGetAvgFees creates a new http.Handler for the get avg fees operation
func NewGetAvgFees(ctx *middleware.Context, handler GetAvgFeesHandler) *GetAvgFees {
	return &GetAvgFees{Context: ctx, Handler: handler}
}

/*GetAvgFees swagger:route GET /v2/data/{platform}/{network}/operations/avgFees Fees getAvgFees

GetAvgFees get avg fees API

*/
type GetAvgFees struct {
	Context *middleware.Context
	Handler GetAvgFeesHandler
}

func (o *GetAvgFees) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAvgFeesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
