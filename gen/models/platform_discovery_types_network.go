// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PlatformDiscoveryTypesNetwork platform discovery types network
// swagger:model PlatformDiscoveryTypes.Network
type PlatformDiscoveryTypesNetwork struct {

	// description
	Description string `json:"description,omitempty"`

	// display name
	// Required: true
	DisplayName *string `json:"displayName"`

	// name
	// Required: true
	Name *string `json:"name"`

	// network
	// Required: true
	Network *string `json:"network"`

	// platform
	// Required: true
	Platform *string `json:"platform"`
}

// Validate validates this platform discovery types network
func (m *PlatformDiscoveryTypesNetwork) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNetwork(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePlatform(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PlatformDiscoveryTypesNetwork) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("displayName", "body", m.DisplayName); err != nil {
		return err
	}

	return nil
}

func (m *PlatformDiscoveryTypesNetwork) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *PlatformDiscoveryTypesNetwork) validateNetwork(formats strfmt.Registry) error {

	if err := validate.Required("network", "body", m.Network); err != nil {
		return err
	}

	return nil
}

func (m *PlatformDiscoveryTypesNetwork) validatePlatform(formats strfmt.Registry) error {

	if err := validate.Required("platform", "body", m.Platform); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PlatformDiscoveryTypesNetwork) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PlatformDiscoveryTypesNetwork) UnmarshalBinary(b []byte) error {
	var res PlatformDiscoveryTypesNetwork
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
