// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BakingRightsRow baking rights row
// swagger:model BakingRightsRow
type BakingRightsRow struct {

	// delegate
	Delegate string `json:"delegate,omitempty"`

	// estimated time
	// Format: date-time
	EstimatedTime strfmt.DateTime `json:"estimated_time,omitempty"`

	// priority
	// Required: true
	Priority *int64 `json:"priority"`
}

// Validate validates this baking rights row
func (m *BakingRightsRow) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEstimatedTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePriority(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BakingRightsRow) validateEstimatedTime(formats strfmt.Registry) error {

	if swag.IsZero(m.EstimatedTime) { // not required
		return nil
	}

	if err := validate.FormatOf("estimated_time", "body", "date-time", m.EstimatedTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *BakingRightsRow) validatePriority(formats strfmt.Registry) error {

	if err := validate.Required("priority", "body", m.Priority); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BakingRightsRow) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BakingRightsRow) UnmarshalBinary(b []byte) error {
	var res BakingRightsRow
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
